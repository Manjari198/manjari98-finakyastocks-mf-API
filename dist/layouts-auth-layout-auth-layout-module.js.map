{"version":3,"sources":["./src/app/pages/forgot/forgot.component.html","./src/app/pages/login/login.component.html","./src/app/pages/register/register.component.html","./src/app/pages/reset/reset.component.html","./src/app/layouts/auth-layout/auth-layout.module.ts","./src/app/layouts/auth-layout/auth-layout.routing.ts","./src/app/pages/forgot/forgot.component.css","./src/app/pages/forgot/forgot.component.ts","./src/app/pages/login/login.component.scss","./src/app/pages/login/login.component.ts","./src/app/pages/register/register.component.scss","./src/app/pages/register/register.component.ts","./src/app/pages/reset/reset.component.css","./src/app/pages/reset/reset.component.ts"],"names":[],"mappings":"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","file":"layouts-auth-layout-auth-layout-module.js","sourcesContent":["export default \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\r\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\r\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\r\\n    </svg>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Page content -->\\r\\n<div class=\\\"container mt--8 pb-5\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-5 col-md-7\\\">\\r\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\r\\n        <h1>Reset your Password</h1>\\r\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\r\\n          <form #forgotForm=\\\"ngForm\\\" (ngSubmit)=\\\"forgotForm.valid && onSubmit(forgotForm)\\\">\\r\\n            <div class=\\\"form-group mb-3\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\r\\n                </div>\\r\\n                <input #email=\\\"ngModel\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" required [pattern]=\\\"emailRegex\\\" [ngClass]=\\\"{'invalid-textbox' :forgotForm.submitted && !email.valid}\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\">\\r\\n                <div *ngIf=\\\"forgotForm.submitted && email.errors?.pattern\\\">\\r\\n                  <label class=\\\"validation-message\\\">Invalid email address.</label>\\r\\n                </div>\\r\\n                <div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\r\\n                  {{serverErrorMessages}}\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"text-center\\\">\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary my-4\\\">Reset Password</button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<app-navbar></app-navbar>\\r\\n<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"header-body text-center mb-7\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\r\\n          <h1 class=\\\"text-white\\\">Welcome!</h1>\\r\\n          <p class=\\\"text-lead text-light\\\">Login or create new account for Finakya.</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\r\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\r\\n    </svg>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Page content -->\\r\\n<div class=\\\"container mt--8 pb-5\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-5 col-md-7\\\">\\r\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\r\\n        \\r\\n        <div class=\\\"card-header bg-transparent pb-5\\\">\\r\\n          <div class=\\\"text-muted text-center mt-2 mb-3\\\"><small>Sign in with</small></div>\\r\\n          <div class=\\\"btn-wrapper text-center\\\">\\r\\n            <a  class=\\\"btn btn-neutral btn-icon\\\">\\r\\n              <span class=\\\"btn-inner--icon\\\"><img src=\\\"../assets/img/icons/common/google.svg\\\"></span>\\r\\n              <span class=\\\"btn-inner--text\\\" (click)=\\\"googleLogin()\\\">Google</span>\\r\\n            </a>\\r\\n          </div>\\r\\n        </div> \\r\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\r\\n          <div class=\\\"text-center text-muted mb-4\\\">\\r\\n            <!-- <small>Or sign in with credentials</small> -->\\r\\n            <small>Sign in with credentials</small>\\r\\n          </div>\\r\\n          <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"loginForm.valid && onSubmit(loginForm)\\\">\\r\\n            <div class=\\\"form-group mb-3\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\r\\n                </div>\\r\\n                <input #email=\\\"ngModel\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" required [pattern]=\\\"emailRegex\\\" [ngClass]=\\\"{'invalid-textbox' :loginForm.submitted && !email.valid}\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\">\\r\\n                <div *ngIf=\\\"loginForm.submitted && email.errors?.pattern\\\">\\r\\n                  <label class=\\\"validation-message\\\">Invalid email address.</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\r\\n                </div>\\r\\n                <input name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"model.password\\\" required minlength=\\\"4\\\" [ngClass]=\\\"{'invalid-textbox' :loginForm.submitted && !password.valid}\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\">\\r\\n                <div *ngIf=\\\"loginForm.submitted && password.errors?.minlength\\\">\\r\\n                  <label class=\\\"validation-message\\\">Minimum 4 characters.</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\r\\n              <input class=\\\"custom-control-input\\\" id=\\\" customCheckLogin\\\" type=\\\"checkbox\\\">\\r\\n              <label class=\\\"custom-control-label\\\" for=\\\" customCheckLogin\\\">\\r\\n                <span class=\\\"text-muted\\\">Remember me</span>\\r\\n              </label>\\r\\n            </div>\\r\\n            <div class=\\\"text-center\\\">\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary my-4\\\">Sign in</button>\\r\\n            </div>\\r\\n          </form>\\r\\n          <div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\r\\n            {{serverErrorMessages}}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row mt-3\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <a (click)=\\\"forgot()\\\" class=\\\"text-light\\\"><small>Forgot password?</small></a>\\r\\n        </div>\\r\\n        <div class=\\\"col-6 text-right\\\">\\r\\n          <a (click)=\\\"new()\\\" class=\\\"text-light\\\"><small>Create new account</small></a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"header-body text-center mb-7\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\r\\n          <h1 class=\\\"text-white\\\">Welcome!</h1>\\r\\n          <p class=\\\"text-lead text-light\\\">Login or create new account for Finakya.</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\r\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\r\\n    </svg>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Page content -->\\r\\n<div class=\\\"container mt--8 pb-5\\\">\\r\\n  <!-- Table -->\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-6 col-md-8\\\">\\r\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\r\\n        \\r\\n        <div class=\\\"card-header bg-transparent pb-5\\\">\\r\\n          <div class=\\\"text-muted text-center mt-2 mb-4\\\"><small>Sign up with</small></div>\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-neutral btn-icon mr-4\\\">\\r\\n              <span class=\\\"btn-inner--icon\\\"><img src=\\\"assets/img/icons/common/github.svg\\\"></span>\\r\\n              <span class=\\\"btn-inner--text\\\">Github</span>\\r\\n            </a>\\r\\n            <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-neutral btn-icon\\\">\\r\\n              <span class=\\\"btn-inner--icon\\\"><img src=\\\"assets/img/icons/common/google.svg\\\"></span>\\r\\n              <span class=\\\"btn-inner--text\\\">Google</span>\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\r\\n          <div class=\\\"text-center text-muted mb-4\\\">\\r\\n            <!-- <small>Or sign up with credentials</small> -->\\r\\n            <small>Sign up with credentials</small>\\r\\n          </div>\\r\\n          <form #signUpForm=\\\"ngForm\\\" (ngSubmit)=\\\"signUpForm.valid && onSubmit(signUpForm)\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\r\\n                </div>\\r\\n                <input [(ngModel)]=\\\"userService.selectedUser.fullName\\\" #fullName=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"fullName\\\" placeholder=\\\"Name\\\" type=\\\"text\\\" required [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !fullName.valid}\\\">\\r\\n                <div *ngIf=\\\"signUpForm.submitted && !fullName.valid\\\">\\r\\n                  <label styles=\\\"color:red\\\" class=\\\"validation-message\\\">This field is required.</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\r\\n                </div>\\r\\n                <input [(ngModel)]=\\\"userService.selectedUser.email\\\" #email=\\\"ngModel\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" required [pattern]=\\\"emailRegex\\\" [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !email.valid}\\\">\\r\\n                <div *ngIf=\\\"signUpForm.submitted && email.errors\\\">\\r\\n                  <label *ngIf=\\\"email.errors.required\\\" class=\\\"validation-message\\\">This field is required.</label>\\r\\n                  <label *ngIf=\\\"email.errors.pattern\\\" class=\\\"validation-message\\\">Invalid email address.</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\r\\n                </div>\\r\\n                <input [(ngModel)]=\\\"userService.selectedUser.password\\\" class=\\\"form-control\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" minlength=\\\"4\\\" required [ngClass]=\\\"{'invalid-textbox' :signUpForm.submitted && !password.valid }\\\">\\r\\n                <div *ngIf=\\\"signUpForm.submitted && password.errors\\\">\\r\\n                  <label *ngIf=\\\"password.errors.required\\\" class=\\\"validation-message\\\">This field is required.</label>\\r\\n                  <label *ngIf=\\\"password.errors.minlength\\\" class=\\\"validation-message\\\">Enter atleast 4 characters.</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"text-muted font-italic\\\"><small>password strength: <span class=\\\"text-success font-weight-700\\\">strong</span></small></div>\\r\\n            <div class=\\\"row my-4\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n                <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\r\\n                  <input (click)=\\\"check()\\\" class=\\\"custom-control-input\\\" id=\\\"customCheckRegister\\\" type=\\\"checkbox\\\">\\r\\n                  <label class=\\\"custom-control-label\\\" for=\\\"customCheckRegister\\\">\\r\\n                    <span class=\\\"text-muted\\\">I agree with the <a href=\\\"#!\\\">Privacy Policy</a></span>\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"text-center\\\">\\r\\n              <button *ngIf=\\\"isDisabled; else privacyPolicy\\\" class=\\\"btn btn-primary mt-4\\\" type=\\\"submit\\\">Create account</button>\\r\\n              <ng-template #privacyPolicy>\\r\\n                <button [disabled]=\\\"isDisabled ? false : true\\\" type=\\\"button\\\" class=\\\"btn btn-primary mt-4 \\\">Create account</button>\\r\\n                <br>\\r\\n                <p>You need to agree to the privacy policy!!</p>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"header-body text-center mb-7\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-lg-5 col-md-6\\\">\\r\\n          <h1 class=\\\"text-white\\\">Hey there!</h1>\\r\\n          <p class=\\\"text-lead text-light\\\">Reset Your Password</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\r\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\r\\n    </svg>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Page content -->\\r\\n<div class=\\\"container mt--8 pb-5\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-lg-5 col-md-7\\\">\\r\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\r\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\r\\n          <form #resetForm=\\\"ngForm\\\" (ngSubmit)=\\\"resetForm.valid && onSubmit(resetForm)\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\r\\n                </div>\\r\\n                <input name=\\\"newPassword\\\" #newPassword=\\\"ngModel\\\" [(ngModel)]=\\\"model.newPassword\\\" required minlength=\\\"4\\\" [ngClass]=\\\"{'invalid-textbox' :resetForm.submitted && !newPassword.valid}\\\" class=\\\"form-control\\\" placeholder=\\\"New Password\\\" type=\\\"password\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"input-group input-group-alternative\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\r\\n                </div>\\r\\n                <input name=\\\"confirmPassword\\\" #confirmPassword=\\\"ngModel\\\" [(ngModel)]=\\\"model.confirmPassword\\\" required minlength=\\\"4\\\" [ngClass]=\\\"{'invalid-textbox' :resetForm.submitted && !confirmPassword.valid}\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\" type=\\\"password\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"text-center\\\">\\r\\n              <button [disabled]=\\\"allowSubmit\\\" type=\\\"submit\\\" class=\\\"btn btn-primary my-4\\\">Reset Password</button>\\r\\n            </div>\\r\\n          </form>\\r\\n          <div class=\\\"alert\\\" *ngIf=\\\"serverErrorMessages\\\">\\r\\n            {{serverErrorMessages}}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthLayoutRoutes } from './auth-layout.routing';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { LoginComponent } from '../../pages/login/login.component';\r\nimport { RegisterComponent } from '../../pages/register/register.component';\r\nimport { ForgotComponent } from '../../pages/forgot/forgot.component';\r\nimport { ResetComponent } from '../../pages/reset/reset.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(AuthLayoutRoutes),\r\n    FormsModule\r\n    // NgbModule\r\n  ],\r\n  declarations: [\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ForgotComponent,\r\n    ResetComponent\r\n  ]\r\n})\r\nexport class AuthLayoutModule { }\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from '../../pages/login/login.component';\r\nimport { RegisterComponent } from '../../pages/register/register.component';\r\nimport { ForgotComponent } from '../../pages/forgot/forgot.component';\r\nimport { ResetComponent } from '../../pages/reset/reset.component';\r\n\r\nexport const AuthLayoutRoutes: Routes = [\r\n    { path: 'login',          component: LoginComponent },\r\n    { path: 'register',       component: RegisterComponent },\r\n    { path: 'forgot',         component: ForgotComponent},\r\n    { path: 'reset/:token',    component: ResetComponent}\r\n];\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ZvcmdvdC9mb3Jnb3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-forgot',\r\n  templateUrl: './forgot.component.html',\r\n  styleUrls: ['./forgot.component.css']\r\n})\r\nexport class ForgotComponent implements OnInit {\r\n  model = {\r\n    email: ''\r\n  }\r\n  serverErrorMessages: String;\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onSubmit(form: NgForm){\r\n    this.userService.forgot(form.value).subscribe(\r\n      res => {\r\n        this.router.navigateByUrl('/forgot');\r\n      },\r\n      err => {\r\n        this.serverErrorMessages = err.error.message;\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { UserService } from '../../shared/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {NavbarComponent} from '../../components/navbar/navbar.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  serverErrorMessages: String;\r\n  model = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n  ngOnDestroy() {\r\n  }\r\n  onSubmit(form: NgForm){\r\n    this.userService.login(form.value).subscribe(\r\n      res => {\r\n        this.userService.setToken(res['token']);\r\n        this.router.navigateByUrl('/dashboard');\r\n      },\r\n      err => {\r\n        this.serverErrorMessages = err.error.message;\r\n      }\r\n    )\r\n  }\r\n\r\n    // onSignIn(googleUser) {\r\n    // //  var id_token = googleUser.getAuthResponse().id_token;\r\n    //   var profile = googleUser.getBasicProfile();\r\n    //   console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\r\n    //   console.log('Name: ' + profile.getName());\r\n    //   console.log('Image URL: ' + profile.getImageUrl());\r\n    //   console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\r\n    // }\r\n  // googleLogin(){\r\n  //   this.userService.getGoogleAuth().subscribe(\r\n  //     res=>{},\r\n  //     err=>{}\r\n  //   )\r\n  // }\r\n  new(){\r\n    this.router.navigateByUrl('/register');\r\n  }\r\n  forgot(){\r\n    this.router.navigateByUrl('/forgot');\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from '../../shared/user.service';\r\nimport {NgForm} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n  serverErrorMessages: String;\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n  onSubmit(form: NgForm){\r\n    this.userService.postUser(form.value).subscribe(\r\n      res=> {\r\n        this.resetForm(form);\r\n        this.router.navigateByUrl('login');\r\n      },\r\n      err=> {\r\n        if(err.status==422){\r\n          this.serverErrorMessages = err.error.join('<br/>')\r\n        }\r\n        else\r\n          this.serverErrorMessages = \"Something went wrong. Please contact Admin\";\r\n      }\r\n    );\r\n  }\r\n\r\n  resetForm(form: NgForm){\r\n    this.userService.selectedUser = {\r\n      fullName:'',\r\n      email:'',\r\n      password:''\r\n    };\r\n    form.resetForm();\r\n    this.serverErrorMessages = '';\r\n  }\r\n\r\n  public isDisabled = false;\r\n  check(){\r\n    if(this.isDisabled)\r\n      this.isDisabled = false;\r\n    else\r\n      this.isDisabled = true;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Jlc2V0L3Jlc2V0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/user.service';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-reset',\r\n  templateUrl: './reset.component.html',\r\n  styleUrls: ['./reset.component.css']\r\n})\r\nexport class ResetComponent implements OnInit {\r\n  token: String;\r\n  successMessage: boolean;\r\n  serverErrorMessages = \"\";\r\n  allowSubmit: boolean;\r\n\r\n  model = {\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  }\r\n\r\n  constructor(private userService: UserService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.token = this.route.snapshot.paramMap.get('token');\r\n\r\n    this.userService.checkToken(this.token).subscribe(\r\n      res => {\r\n        this.allowSubmit = true;\r\n        console.log('WORKING')\r\n      },\r\n      err => {\r\n        if(err.status == 404)\r\n          this.serverErrorMessages = err.error.join('</br>');\r\n      }\r\n    )\r\n  }\r\n\r\n  onSubmit(form: NgForm){\r\n    this.userService.resetPassword(form.value, this.token).subscribe(\r\n      res => {\r\n        console.log(\"no error\");\r\n        this.successMessage = true;\r\n        this.router.navigateByUrl('/login');\r\n      },\r\n      err => {\r\n        if(err.status == 404 || err.status == 400)\r\n          this.serverErrorMessages = err.error.join('</br>');\r\n        else\r\n          this.serverErrorMessages = 'Something went wrong. Please contact ADMIN';\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}